@inject ExchangeOrderService ExchangeOrderService
@inject NavigationManager Navigation
@inject UserService UserService
@inject ISnackbar Snackbar

<MudTable Items="@Offers" Hover="true" LoadingProgressColor="Color.Info" Style="width: 60%; margin: 0 20% 0 20%">
    <HeaderContent>
        <MudTh>Отдаёте</MudTh>
        <MudTh></MudTh>
        <MudTh>Получаете</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd style="width: 280px; margin: 2%">
            <MudCard Outlined="true">
                @if (!IsRecieved)
                {
                    @if (context.SenderExchangeOrdersId.Count() == 1)
                    {
                        <MudCardContent>
                                <MudImage Src=@("Images/" + @ExchangeOrderService.GetExchangeOrder(context.SenderExchangeOrdersId.First()).PhotoName) Elevation="25" Class="rounded-lg" Width="250" Height="250" />               
                        </MudCardContent>
                        <MudCardActions style="display: flex; justify-content:center">
                            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(context.SenderExchangeOrdersId.First())">@ExchangeOrderService.CutName(@ExchangeOrderService.GetExchangeOrder(context.SenderExchangeOrdersId.First()).Title)</MudButton>
                        </MudCardActions>
                    }
                    else
                    {
                        @foreach(var s in context.SenderExchangeOrdersId)
                        {
                            <MudCardActions style="display: flex; justify-content:center">
                                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(s)">@ExchangeOrderService.CutName(@ExchangeOrderService.GetExchangeOrder(s).Title)</MudButton>
                            </MudCardActions>
                        }
                        
                    }       
                }
                else
                {
                    @if (context.RecipientExchangeOrdersId.Count() == 1)
                    {
                        <MudCardContent>
                            <MudImage Src=@("Images/" + @ExchangeOrderService.GetExchangeOrder(context.RecipientExchangeOrdersId.First()).PhotoName) Elevation="25" Class="rounded-lg" Width="250" Height="250" />
                        </MudCardContent>
                        <MudCardActions style="display: flex; justify-content:center">
                            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(context.RecipientExchangeOrdersId.First())">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(context.RecipientExchangeOrdersId.First()).Title)</MudButton>
                        </MudCardActions>
                    }
                    else
                    {
                        @foreach (var s in context.RecipientExchangeOrdersId)
                        {
                            <MudCardActions style="display: flex; justify-content:center">
                                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(s)">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(s).Title)</MudButton>
                            </MudCardActions>
                        }

                    }
                }
            </MudCard>
        </MudTd>
        <MudTd Style="display: flex; justify-content:center">
            @if (!IsRecieved)
            {
                <div>
                    <div style="display: flex; justify-content:center">
                        <MudImage Src="Images/rightArrow.png" Height="50" Style="margin: 120px 0 0 0" />
                    </div>
                    @if(!context.IsConducted)
                    {
                    <div>
                            <button class="btn btn-primary" @onclick=@(() => RejectOffer(context)) style="margin: 15px 0 0 0">Отменить обмен</button>
                    </div>
                    }
                </div>             
            }
            else
            {
                <div>
                    <div style="display: flex; justify-content:center">
                        <MudImage Src="Images/rightArrow.png" Height="50" Style="margin: 120px 0 0 0" />
                    </div>
                    <div>
                        <button class="btn btn-primary" @onclick=@(() => AcceptOffer(context)) style="margin: 15px 0 0 0">Принять обмен</button>
                        <button class="btn btn-primary" @onclick=@(() => RejectOffer(context)) style="margin: 15px 0 0 0">Отклонить обмен</button>
                    </div>
                </div>
            }

        </MudTd>
        <MudTd style="width: 280px; margin: 2%">
            <MudCard Outlined="true">
                @if (!IsRecieved)
                {
                    @if (context.RecipientExchangeOrdersId.Count() == 1)
                    {
                        <MudCardContent>
                            <MudImage Src=@("Images/" + @ExchangeOrderService.GetExchangeOrder(context.RecipientExchangeOrdersId.First()).PhotoName) Elevation="25" Class="rounded-lg" Width="250" Height="250" />
                        </MudCardContent>
                        <MudCardActions style="display: flex; justify-content:center">
                            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(context.RecipientExchangeOrdersId.First())">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(context.RecipientExchangeOrdersId.First()).Title)</MudButton>
                        </MudCardActions>
                    }
                    else
                    {
                        @foreach (var s in context.RecipientExchangeOrdersId)
                        {
                            <MudCardActions style="display: flex; justify-content:center">
                                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(s)">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(s).Title)</MudButton>
                            </MudCardActions>
                        }
                    }
                }
                else
                {
                    @if (context.SenderExchangeOrdersId.Count() == 1)
                    {
                        <MudCardContent>
                            <MudImage Src=@("Images/" + @ExchangeOrderService.GetExchangeOrder(context.SenderExchangeOrdersId.First()).PhotoName) Elevation="25" Class="rounded-lg" Width="250" Height="250" />
                        </MudCardContent>
                        <MudCardActions style="display: flex; justify-content:center">
                            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(context.SenderExchangeOrdersId.First())">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(context.SenderExchangeOrdersId.First()).Title)</MudButton>
                        </MudCardActions>
                    }
                    else
                    {
                        @foreach (var s in context.SenderExchangeOrdersId)
                        {
                            <MudCardActions style="display: flex; justify-content:center">
                                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(s)">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(s).Title)</MudButton>
                            </MudCardActions>
                        }

                    }
                }
            </MudCard>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>




@code {
    [Parameter]
    public bool IsRecieved { get; set; }
    [Parameter]
    public List<ExchangeOrderOffer> Offers { get; set; }


    public void OpenOrderPage(int id)
    {
        ExchangeOrderService.ChangeCurrentExchangeOrder(id);
        Navigation.NavigateTo("/order-information");
    }

    public void AcceptOffer(ExchangeOrderOffer offer)
    {
        ExchangeOrderService.AcceptExchangeOffer(offer);
        Navigation.NavigateTo("/main");
        Snackbar.Add("Предложение обмена успешно принято!", Severity.Success);
    }

    public void RejectOffer(ExchangeOrderOffer offer)
    {
        ExchangeOrderService.RejectExchangeOffer(offer.ExchangeOfferId);
        Navigation.NavigateTo("/main");
        Snackbar.Add("Предложение обмена успешно отклонено!", Severity.Success);
    }
}