@inject UserService UserService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="main">Бартерный обмен</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

@if(!UserService.IsAuthorized() || UserService.CurrentUser.Role == "User")
{
    <div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="main" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Главная страница
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="make-order">
                    <span class="oi oi-plus" aria-hidden="true"></span> Создать обмен
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="order-menu">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Обмены
                </NavLink>
            </div>
        </nav>
    </div>
}
else
{
    <div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="create-item-category" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Создать категорию
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="create-item-type">
                    <span class="oi oi-plus" aria-hidden="true"></span> Создать тип
                </NavLink>
            </div>
        </nav>
    </div>
}


@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Storage.Nav = this;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public void Reload()
    {
        base.StateHasChanged();
    }
}
