@page "/conducted-offers"

@inject ExchangeOrderService ExchangeOrderService
@inject NavigationManager Navigation
@inject UserService UserService
@inject ISnackbar Snackbar
@inject UserService UserService

<div class="card" style="margin: 2%">
    <div class="card-body" style="display: flex; flex-direction: row; justify-content: flex-start">
        <MudTextField @bind-Value="@searchText" HelperText="Поиск по названию объявления, категории и типу предмета" Label="Поиск"
                      Style="width: 50%" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" OnAdornmentClick="Search" />
    </div>
</div>

@if (UserService.IsAuthorized())
{
    <MudTable Items="@sortConductedOffers" Hover="true" @bind-SelectedItem="selectedOffer" LoadingProgressColor="Color.Info" Style="width: 50%; margin: 0 25% 0 25%" @onclick="SelectOffer">
        <HeaderContent>
            <MudTh>Отдали</MudTh>
            <MudTh></MudTh>
            <MudTh>Получили</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd style="width: 280px; margin: 2%">
                <MudCard Outlined="true">
                    @if (context.SenderEmail == UserService.CurrentUser.Email)
                    {
                        @if (context.SenderExchangeOrdersId.Count() == 1)
                        {
                            <MudCardContent>
                                <MudImage Src=@("Images/" + @ExchangeOrderService.GetExchangeOrder(context.SenderExchangeOrdersId.First()).PhotoName) Elevation="25" Class="rounded-lg" Width="250" Height="250" />
                            </MudCardContent>
                            <MudCardActions style="display: flex; justify-content:center">
                                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(context.SenderExchangeOrdersId.First())">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(context.SenderExchangeOrdersId.First()).Title)</MudButton>
                            </MudCardActions>
                        }
                        else
                        {
                            @foreach (var s in context.SenderExchangeOrdersId)
                            {
                                <MudCardActions style="display: flex; justify-content:center">
                                    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(s)">@ExchangeOrderService.GetExchangeOrder(s).Title</MudButton>
                                </MudCardActions>
                            }
                        }
                    }
                    else
                    {
                        @if (context.RecipientExchangeOrdersId.Count() == 1)
                        {
                            <MudCardContent>
                                <MudImage Src=@("Images/" + @ExchangeOrderService.GetExchangeOrder(context.RecipientExchangeOrdersId.First()).PhotoName) Elevation="25" Class="rounded-lg" Width="250" Height="250" />
                            </MudCardContent>
                            <MudCardActions style="display: flex; justify-content:center">
                                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(context.RecipientExchangeOrdersId.First())">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(context.RecipientExchangeOrdersId.First()).Title)</MudButton>
                            </MudCardActions>
                        }
                        else
                        {
                            @foreach (var s in context.RecipientExchangeOrdersId)
                            {
                                <MudCardActions style="display: flex; justify-content:center">
                                    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(s)">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(s).Title)</MudButton>
                                </MudCardActions>
                            }
                        }
                    }

                </MudCard>
            </MudTd>
            <MudTd Style="display: flex; justify-content:center">
                <MudImage Src="Images/rightArrow.png" Height="50" Style="margin: 130px 0 0 0" />
            </MudTd>
            <MudTd style="width: 280px; margin: 2%">
                <MudCard Outlined="true">
                    @if (context.SenderEmail == UserService.CurrentUser.Email)
                    {
                        @if (context.RecipientExchangeOrdersId.Count() == 1)
                        {
                            <MudCardContent>
                                <MudImage Src=@("Images/" + @ExchangeOrderService.GetExchangeOrder(context.RecipientExchangeOrdersId.First()).PhotoName) Elevation="25" Class="rounded-lg" Width="250" Height="250" />
                            </MudCardContent>
                            <MudCardActions style="display: flex; justify-content:center">
                                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(context.RecipientExchangeOrdersId.First())">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(context.RecipientExchangeOrdersId.First()).Title)</MudButton>
                            </MudCardActions>
                        }
                        else
                        {
                            @foreach (var s in context.RecipientExchangeOrdersId)
                            {
                                <MudCardActions style="display: flex; justify-content:center">
                                    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(s)">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(s).Title)</MudButton>
                                </MudCardActions>
                            }
                        }
                    }
                    else
                    {
                        @if (context.SenderExchangeOrdersId.Count() == 1)
                        {
                            <MudCardContent>
                                <MudImage Src=@("Images/" + @ExchangeOrderService.GetExchangeOrder(context.SenderExchangeOrdersId.First()).PhotoName) Elevation="25" Class="rounded-lg" Width="250" Height="250" />
                            </MudCardContent>
                            <MudCardActions style="display: flex; justify-content:center">
                                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(context.SenderExchangeOrdersId.First())">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(context.SenderExchangeOrdersId.First()).Title)</MudButton>
                            </MudCardActions>
                        }
                        else
                        {
                            @foreach (var s in context.SenderExchangeOrdersId)
                            {
                                <MudCardActions style="display: flex; justify-content:center">
                                    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OpenOrderPage(s)">@ExchangeOrderService.CutName(ExchangeOrderService.GetExchangeOrder(s).Title)</MudButton>
                                </MudCardActions>
                            }
                        }
                    }
                </MudCard>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
}
else
{
    <NotAuthorizedComponent></NotAuthorizedComponent>
}

@code {
    public List<ExchangeOrderOffer> conductedOffers { get; set; }
    public List<ExchangeOrderOffer> sortConductedOffers { get; set; }
    ExchangeOrderOffer selectedOffer;
    string searchText = "";


    protected override void OnInitialized()
    {
        base.OnInitialized();
        if(!UserService.IsAuthorized())
        {
            return;
        }
        if(ExchangeOrderService.CurrentTarget == null)
        {
            conductedOffers = ExchangeOrderService.GetConductedExchangeOrderOffers(UserService.CurrentUser.Email);
        }
        else
        {
            conductedOffers = ExchangeOrderService.GetAvailableOrdersId(ExchangeOrderService.CurrentTarget.TargetId);
        }

        sortConductedOffers = conductedOffers;
    }

    private void OpenOrderPage(int id)
    {
            ExchangeOrderService.ChangeCurrentExchangeOrder(id);
            Navigation.NavigateTo("/order");
    }

    private void SelectOffer()
    {
        if (ExchangeOrderService.CurrentTarget != null)
        {
            ExchangeOrderService.SelectedOffer = selectedOffer;
            Navigation.NavigateTo("/target");
            Snackbar.Add("Обмен успешно добавлен в цель!", Severity.Success);
        }
    }

    private void Search()
    {
        if (searchText != "")
        {
            sortConductedOffers = ExchangeOrderService.SearchOffers(searchText, conductedOffers);
        }
        else
        {
            sortConductedOffers = conductedOffers;
        }
    }
}