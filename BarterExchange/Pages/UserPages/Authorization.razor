@page "/authorization"
@inject UserService UserService
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

@if (!UserService.IsAuthorized())
{
    <div class="card" style="width: 50%; margin: 100px 25% 0 25%">
        <div class="card-header">
            <h3 style="display: flex; justify-content:center">Авторизация</h3>
        </div>
        <div class="card-body">
            <div class="form-group">
                <MudTextField @bind-Value="regLogin" Label="Электронная почта или номер телефона" Clearable="true" Immediate="true" Variant="Variant.Filled"></MudTextField>
            </div>
            <div class="form-group">
                <MudTextField @bind-Value="regPass" InputType="@PasswordInput" Clearable="true" Immediate="true" Label="Пароль" Variant="Variant.Filled" Adornment="Adornment.End"
                          AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ButtonTestClick" AdornmentAriaLabel="Показать пароль"></MudTextField>
            </div>
            <div class="form-group" style="display: flex; justify-content:center; margin: 3% 0 0 0">
                <button class="btn btn-primary" @onclick=Authorize>Авторизироваться</button>
            </div>
            <div class="form-group">
                <NavLink href="/registration" style="display: flex; justify-content:center; margin: 3% 0 0 0">Регистрация</NavLink>
            </div>
        </div>
    </div>
}
else
{
    <div class="modal-body">
        <h5>Выйдите с аккаунта</h5>
        <p>Чтобы авторизировать аккаунт, нужно сначала выйти со своего аккаунта</p>
        <p><button class="btn btn-secondary popover-test" @onclick=UserService.LogOut>Выйти с аккаунта</button></p>
    </div>
}

@code {
    string regLogin  = "";
    string regPass = "";
    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    private void Authorize()
    {
        if (regLogin != "" && regPass != "")
        {
            if (UserService.AuthorizeUser(regLogin, regPass))
            {
                Navigation.NavigateTo("/");
                Storage.Nav.Reload();
                ClearPage();
                Snackbar.Add("Авторизация прошла успешно!", Severity.Success);
            }
            else
            {
                Snackbar.Add("Неверный логин или пароль!", Severity.Error);
            }
        }
        else
        {
            Snackbar.Add("Не все поля заполнены!", Severity.Error);
        }
    }

    private void ButtonTestClick()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private void ClearPage()
    {
        regLogin = "";
        regPass = "";
    }
}
