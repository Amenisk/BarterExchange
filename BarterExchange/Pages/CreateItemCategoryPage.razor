@page "/create-item-category"

@inject ItemService ItemService
@inject ISnackbar Snackbar

<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
    <MudTabPanel Text="Создание категории">
        <div class="card" style="width: 40%; margin: 30px 30% 0 30%">
            <div class="card-header">
                <h3 style="display: flex; justify-content:center; align-content: center">Создание категории предмета обмена</h3>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <MudTextField @bind-Value="titleItemCategory" Label="Название категории" Clearable="true" Immediate="true" Variant="Variant.Filled"></MudTextField>
                </div>
                <div class="form-group" style="display: flex; justify-content:center; margin: 3%">
                    <button class="btn btn-primary" @onclick=CreateCategory>Создать категорию</button>
                </div>
            </div>
        </div>
    </MudTabPanel>
    <MudTabPanel Text="Удаление категории">
        <div class="card" style="width: 40%; margin: 30px 30% 0 30%">
            <div class="card-header">
                <h3 style="display: flex; justify-content:center; align-content: center">Удаление категории предмета обмена</h3>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <div class="card-body">
                        <MudSelect @bind-Value="titleDeletedItemCategory" T="string" Label="Категория предмета обмена" AnchorOrigin="Origin.CenterLeft" TransformOrigin="Origin.CenterRight"
                                   Variant="Variant.Filled" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary">
                            @foreach (var s in allTitlesItemCategories)
                            {
                                <MudSelectItem T="string" Value="@s">@s</MudSelectItem>
                            }
                        </MudSelect>
                    </div>
                </div>
                <div class="form-group" style="display: flex; justify-content:center; margin: 3%">
                    <button class="btn btn-primary" @onclick=DeleteCategory>Удалить категорию</button>
                </div>
            </div>
        </div>
    </MudTabPanel>
</MudTabs>

@code {
    string titleItemCategory = "";
    string titleDeletedItemCategory = "";
    List<string> allTitlesItemCategories = new List<string>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        allTitlesItemCategories = ItemService.GetTitlesItemCategories();
    }

    private void CreateCategory()
    {
        if (titleItemCategory != "")
        {
            if (!ItemService.CheckItemCategory(titleItemCategory))
            {
                ItemService.CreateItemCategory(new ItemCategory(titleItemCategory));
                allTitlesItemCategories = ItemService.GetTitlesItemCategories();
                titleItemCategory = "";
                Snackbar.Add("Категория предмета успешно добавлена!", Severity.Success);
            }
            else
            {
                Snackbar.Add("Такая категория уже существует!", Severity.Error);
            }
        }
        else
        {
            Snackbar.Add("Заполните поле названия категории!", Severity.Error);
        }
    }

    private void DeleteCategory()
    {
        if (ItemService.CheckItemCategoryBeforeDelete(titleDeletedItemCategory))
        {
            Snackbar.Add("Невозможно удалить данную категорию, так как к ней привязаны типы предметов!", Severity.Error);
        }
        else
        {
            ItemService.DeleteItemCategory(titleDeletedItemCategory);
            allTitlesItemCategories = ItemService.GetTitlesItemCategories();
            titleDeletedItemCategory = "";
            Snackbar.Add("Категория предмета успешно удалена!", Severity.Success);
        }     
    }
}
